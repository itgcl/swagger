// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "1111x@qq.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "学生管理"
                ],
                "summary": "创建",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RequestStudentCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "$ref": "#/definitions/dto.ReplyStudentCreate"
                        }
                    },
                    "400": {
                        "description": "参数错误"
                    },
                    "401": {
                        "description": "没有权限"
                    },
                    "500": {
                        "description": "服务器错误"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "$ref": "#/definitions/dto.ReplyLogin"
                        }
                    },
                    "400": {
                        "description": "参数错误"
                    },
                    "401": {
                        "description": "没有权限"
                    },
                    "500": {
                        "description": "服务器错误"
                    }
                }
            }
        },
        "/{studentID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "学生管理"
                ],
                "summary": "详情",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "学生id",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "$ref": "#/definitions/dto.ReplyStudentInfo"
                        }
                    },
                    "400": {
                        "description": "参数错误"
                    },
                    "401": {
                        "description": "没有权限"
                    },
                    "404": {
                        "description": "访问不存在的信息"
                    },
                    "500": {
                        "description": "服务器错误"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "学生管理"
                ],
                "summary": "删除",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "学生id",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "请求成功"
                    },
                    "400": {
                        "description": "参数错误"
                    },
                    "401": {
                        "description": "没有权限"
                    },
                    "500": {
                        "description": "服务器错误"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "学生管理"
                ],
                "summary": "编辑",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "学生id",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "请求参数",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RequestStudentUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "请求成功"
                    },
                    "400": {
                        "description": "参数错误"
                    },
                    "401": {
                        "description": "没有权限"
                    },
                    "404": {
                        "description": "访问不存在的信息"
                    },
                    "500": {
                        "description": "服务器错误"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ReplyLogin": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "ethgdjkfgbvdig34jh5g4jhbvhj"
                }
            }
        },
        "dto.ReplyStudentCreate": {
            "type": "object",
            "properties": {
                "studentID": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.ReplyStudentInfo": {
            "type": "object",
            "required": [
                "age",
                "class",
                "gender",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 12
                },
                "class": {
                    "type": "integer",
                    "example": 5
                },
                "gender": {
                    "type": "string",
                    "example": "女"
                },
                "home_address": {
                    "type": "string",
                    "example": "上海市闵行区xxx路"
                },
                "password": {
                    "type": "string",
                    "example": "654321"
                },
                "username": {
                    "type": "string",
                    "example": "李四"
                }
            }
        },
        "dto.RequestLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "zhangsan"
                }
            }
        },
        "dto.RequestStudentCreate": {
            "type": "object",
            "required": [
                "age",
                "class",
                "gender",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 10
                },
                "class": {
                    "type": "integer",
                    "example": 5
                },
                "gender": {
                    "type": "string",
                    "example": "男"
                },
                "home_address": {
                    "type": "string",
                    "example": "上海市徐汇区xxx路"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "张三"
                }
            }
        },
        "dto.RequestStudentUpdate": {
            "type": "object",
            "required": [
                "age",
                "class",
                "gender",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 12
                },
                "class": {
                    "type": "integer",
                    "example": 5
                },
                "gender": {
                    "type": "string",
                    "example": "女"
                },
                "home_address": {
                    "type": "string",
                    "example": "上海市闵行区xxx路"
                },
                "password": {
                    "type": "string",
                    "example": "654321"
                },
                "username": {
                    "type": "string",
                    "example": "李四"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "127.0.0.1:8080",
	BasePath:    "/student/api/v1",
	Schemes:     []string{},
	Title:       "Swagger student_system",
	Description: "swagger使用示例",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
