basePath: /student/api/v1
definitions:
  dto.ReplyLogin:
    properties:
      token:
        example: ethgdjkfgbvdig34jh5g4jhbvhj
        type: string
    type: object
  dto.ReplyStudentCreate:
    properties:
      studentID:
        example: 1
        type: integer
    type: object
  dto.ReplyStudentInfo:
    properties:
      age:
        example: 12
        type: integer
      class:
        example: 5
        type: integer
      gender:
        example: 女
        type: string
      home_address:
        example: 上海市闵行区xxx路
        type: string
      password:
        example: "654321"
        type: string
      username:
        example: 李四
        type: string
    required:
    - age
    - class
    - gender
    - password
    - username
    type: object
  dto.RequestLogin:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: zhangsan
        type: string
    required:
    - password
    - username
    type: object
  dto.RequestStudentCreate:
    properties:
      age:
        example: 10
        type: integer
      class:
        example: 5
        type: integer
      gender:
        example: 男
        type: string
      home_address:
        example: 上海市徐汇区xxx路
        type: string
      password:
        example: "123456"
        type: string
      username:
        example: 张三
        type: string
    required:
    - age
    - class
    - gender
    - password
    - username
    type: object
  dto.RequestStudentUpdate:
    properties:
      age:
        example: 12
        type: integer
      class:
        example: 5
        type: integer
      gender:
        example: 女
        type: string
      home_address:
        example: 上海市闵行区xxx路
        type: string
      password:
        example: "654321"
        type: string
      username:
        example: 李四
        type: string
    required:
    - age
    - class
    - gender
    - password
    - username
    type: object
host: 127.0.0.1:8080
info:
  contact:
    email: 1111x@qq.com
    name: API Support
    url: http://www.swagger.io/support
  description: swagger使用示例
  termsOfService: http://swagger.io/terms/
  title: Swagger student_system
  version: "1.0"
paths:
  /{studentID}:
    delete:
      parameters:
      - description: 学生id
        in: path
        name: studentID
        required: true
        type: integer
      responses:
        "204":
          description: 请求成功
        "400":
          description: 参数错误
        "401":
          description: 没有权限
        "500":
          description: 服务器错误
      security:
      - ApiKeyAuth: []
      summary: 删除
      tags:
      - 学生管理
    get:
      parameters:
      - description: 学生id
        in: path
        name: studentID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/dto.ReplyStudentInfo'
        "400":
          description: 参数错误
        "401":
          description: 没有权限
        "404":
          description: 访问不存在的信息
        "500":
          description: 服务器错误
      security:
      - ApiKeyAuth: []
      summary: 详情
      tags:
      - 学生管理
    patch:
      consumes:
      - application/json
      parameters:
      - description: 学生id
        in: path
        name: studentID
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/dto.RequestStudentUpdate'
      produces:
      - application/json
      responses:
        "204":
          description: 请求成功
        "400":
          description: 参数错误
        "401":
          description: 没有权限
        "404":
          description: 访问不存在的信息
        "500":
          description: 服务器错误
      security:
      - ApiKeyAuth: []
      summary: 编辑
      tags:
      - 学生管理
  /create:
    post:
      parameters:
      - description: 请求参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/dto.RequestStudentCreate'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/dto.ReplyStudentCreate'
        "400":
          description: 参数错误
        "401":
          description: 没有权限
        "500":
          description: 服务器错误
      security:
      - ApiKeyAuth: []
      summary: 创建
      tags:
      - 学生管理
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/dto.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/dto.ReplyLogin'
        "400":
          description: 参数错误
        "401":
          description: 没有权限
        "500":
          description: 服务器错误
      summary: 登录
      tags:
      - 用户
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
